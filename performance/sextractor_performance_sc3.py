#!/usr/bin/python
# -*- coding: utf-8 -*-

"""Python script for time measurements

La idea es que compare los objetos extraidos en total con los que tengo.

Todo:
    * Improve log messages

"""

from astropy.io import fits
from astropy.table import Table
from astropy.wcs import WCS

# from pandas import read_csv

from misc import extract_settings_sc3

__author__ = "Samuel Gongora-Garcia"
__copyright__ = "Copyright 2018"
__credits__ = ["Samuel Gongora-Garcia"]
__version__ = "0.1"
__maintainer__ = "Samuel Gongora-Garcia"
__email__ = "sgongora@cab.inta-csic.es"
__status__ = "Development"


def get_fits_limits(fits_image):
    """

    @param fits_image: fits image

    @return limits: a dict with ra/dec limits above_ra, below_ra,
                    above_dec_, below_dec
    """
    # logger.info('getting limits of {} image'.format(fits_image))

    data, header = fits.getdata(fits_image, header=True)
    w = WCS(fits_image)

    above_x, above_y = header['NAXIS1'], header['NAXIS2']
    above_ra, above_dec = w.all_pix2world(above_x, above_y, 0)

    below_ra, below_dec = w.all_pix2world(0, 0, 0)

    limits = {'below_ra': float(above_ra), 'above_ra': float(below_ra),
              'below_dec': float(below_dec), 'above_dec': float(above_dec)}

    # check position
    # sometimes some values could be higher when are tagged as "lowest"
    return limits


def get_cat(cat_n):
    """  TODO get scamp organization in order to reduce the lines number

    :param cat_n:
    :return: cat_file
    """
    cat_part_1 = 'EUC_VIS_SWL-DET-00'

    cats_final = []
    cats_partial = ['', '1-000000-0000000__20170630T011437.3Z_00.00_0',
                    '1-000000-0000000__20170630T011437.3Z_00.00_10',
                    '1-000000-0000000__20170630T011437.3Z_00.00_11',
                    '1-000000-0000000__20170630T011437.3Z_00.00_12',
                    '1-000000-0000000__20170630T011437.3Z_00.00_13',
                    '1-000000-0000000__20170630T011437.3Z_00.00_14',
                    '1-000000-0000000__20170630T011437.3Z_00.00_15',
                    '1-000000-0000000__20170630T011437.3Z_00.00_16',
                    '1-000000-0000000__20170630T011437.3Z_00.00_17',
                    '1-000000-0000000__20170630T011437.3Z_00.00_18',
                    '1-000000-0000000__20170630T011437.3Z_00.00_19',
                    '1-000000-0000000__20170630T011437.3Z_00.00_1',
                    '1-000000-0000000__20170630T011437.3Z_00.00_20',
                    '1-000000-0000000__20170630T011437.3Z_00.00_21',
                    '1-000000-0000000__20170630T011437.3Z_00.00_22',
                    '1-000000-0000000__20170630T011437.3Z_00.00_23',
                    '1-000000-0000000__20170630T011437.3Z_00.00_24',
                    '1-000000-0000000__20170630T011437.3Z_00.00_25',
                    '1-000000-0000000__20170630T011437.3Z_00.00_26',
                    '1-000000-0000000__20170630T011437.3Z_00.00_27',
                    '1-000000-0000000__20170630T011437.3Z_00.00_28',
                    '1-000000-0000000__20170630T011437.3Z_00.00_29',
                    '1-000000-0000000__20170630T011437.3Z_00.00_2',
                    '1-000000-0000000__20170630T011437.3Z_00.00_30',
                    '1-000000-0000000__20170630T011437.3Z_00.00_31',
                    '1-000000-0000000__20170630T011437.3Z_00.00_32',
                    '1-000000-0000000__20170630T011437.3Z_00.00_33',
                    '1-000000-0000000__20170630T011437.3Z_00.00_34',
                    '1-000000-0000000__20170630T011437.3Z_00.00_35',
                    '1-000000-0000000__20170630T011437.3Z_00.00_3',
                    '1-000000-0000000__20170630T011437.3Z_00.00_4',
                    '1-000000-0000000__20170630T011437.3Z_00.00_5',
                    '1-000000-0000000__20170630T011437.3Z_00.00_6',
                    '1-000000-0000000__20170630T011437.3Z_00.00_7',
                    '1-000000-0000000__20170630T011437.3Z_00.00_8',
                    '1-000000-0000000__20170630T011437.3Z_00.00_9',
                    '2-000000-0000000__20170630T011642.0Z_00.00_0',
                    '2-000000-0000000__20170630T011642.0Z_00.00_10',
                    '2-000000-0000000__20170630T011642.0Z_00.00_11',
                    '2-000000-0000000__20170630T011642.0Z_00.00_12',
                    '2-000000-0000000__20170630T011642.0Z_00.00_13',
                    '2-000000-0000000__20170630T011642.0Z_00.00_14',
                    '2-000000-0000000__20170630T011642.0Z_00.00_15',
                    '2-000000-0000000__20170630T011642.0Z_00.00_16',
                    '2-000000-0000000__20170630T011642.0Z_00.00_17',
                    '2-000000-0000000__20170630T011642.0Z_00.00_18',
                    '2-000000-0000000__20170630T011642.0Z_00.00_19',
                    '2-000000-0000000__20170630T011642.0Z_00.00_1',
                    '2-000000-0000000__20170630T011642.0Z_00.00_20',
                    '2-000000-0000000__20170630T011642.0Z_00.00_21',
                    '2-000000-0000000__20170630T011642.0Z_00.00_22',
                    '2-000000-0000000__20170630T011642.0Z_00.00_23',
                    '2-000000-0000000__20170630T011642.0Z_00.00_24',
                    '2-000000-0000000__20170630T011642.0Z_00.00_25',
                    '2-000000-0000000__20170630T011642.0Z_00.00_26',
                    '2-000000-0000000__20170630T011642.0Z_00.00_27',
                    '2-000000-0000000__20170630T011642.0Z_00.00_28',
                    '2-000000-0000000__20170630T011642.0Z_00.00_29',
                    '2-000000-0000000__20170630T011642.0Z_00.00_2',
                    '2-000000-0000000__20170630T011642.0Z_00.00_30',
                    '2-000000-0000000__20170630T011642.0Z_00.00_31',
                    '2-000000-0000000__20170630T011642.0Z_00.00_32',
                    '2-000000-0000000__20170630T011642.0Z_00.00_33',
                    '2-000000-0000000__20170630T011642.0Z_00.00_34',
                    '2-000000-0000000__20170630T011642.0Z_00.00_35',
                    '2-000000-0000000__20170630T011642.0Z_00.00_3',
                    '2-000000-0000000__20170630T011642.0Z_00.00_4',
                    '2-000000-0000000__20170630T011642.0Z_00.00_5',
                    '2-000000-0000000__20170630T011642.0Z_00.00_6',
                    '2-000000-0000000__20170630T011642.0Z_00.00_7',
                    '2-000000-0000000__20170630T011642.0Z_00.00_8',
                    '2-000000-0000000__20170630T011642.0Z_00.00_9',
                    '3-000000-0000000__20170630T011848.6Z_00.00_0',
                    '3-000000-0000000__20170630T011848.6Z_00.00_10',
                    '3-000000-0000000__20170630T011848.6Z_00.00_11',
                    '3-000000-0000000__20170630T011848.6Z_00.00_12',
                    '3-000000-0000000__20170630T011848.6Z_00.00_13',
                    '3-000000-0000000__20170630T011848.6Z_00.00_14',
                    '3-000000-0000000__20170630T011848.6Z_00.00_15',
                    '3-000000-0000000__20170630T011848.6Z_00.00_16',
                    '3-000000-0000000__20170630T011848.6Z_00.00_17',
                    '3-000000-0000000__20170630T011848.6Z_00.00_18',
                    '3-000000-0000000__20170630T011848.6Z_00.00_19',
                    '3-000000-0000000__20170630T011848.6Z_00.00_1',
                    '3-000000-0000000__20170630T011848.6Z_00.00_20',
                    '3-000000-0000000__20170630T011848.6Z_00.00_21',
                    '3-000000-0000000__20170630T011848.6Z_00.00_22',
                    '3-000000-0000000__20170630T011848.6Z_00.00_23',
                    '3-000000-0000000__20170630T011848.6Z_00.00_24',
                    '3-000000-0000000__20170630T011848.6Z_00.00_25',
                    '3-000000-0000000__20170630T011848.6Z_00.00_26',
                    '3-000000-0000000__20170630T011848.6Z_00.00_27',
                    '3-000000-0000000__20170630T011848.6Z_00.00_28',
                    '3-000000-0000000__20170630T011848.6Z_00.00_29',
                    '3-000000-0000000__20170630T011848.6Z_00.00_2',
                    '3-000000-0000000__20170630T011848.6Z_00.00_30',
                    '3-000000-0000000__20170630T011848.6Z_00.00_31',
                    '3-000000-0000000__20170630T011848.6Z_00.00_32',
                    '3-000000-0000000__20170630T011848.6Z_00.00_33',
                    '3-000000-0000000__20170630T011848.6Z_00.00_34',
                    '3-000000-0000000__20170630T011848.6Z_00.00_35',
                    '3-000000-0000000__20170630T011848.6Z_00.00_3',
                    '3-000000-0000000__20170630T011848.6Z_00.00_4',
                    '3-000000-0000000__20170630T011848.6Z_00.00_5',
                    '3-000000-0000000__20170630T011848.6Z_00.00_6',
                    '3-000000-0000000__20170630T011848.6Z_00.00_7',
                    '3-000000-0000000__20170630T011848.6Z_00.00_8',
                    '3-000000-0000000__20170630T011848.6Z_00.00_9',
                    '4-000000-0000000__20170630T012050.1Z_00.00_0',
                    '4-000000-0000000__20170630T012050.1Z_00.00_10',
                    '4-000000-0000000__20170630T012050.1Z_00.00_11',
                    '4-000000-0000000__20170630T012050.1Z_00.00_12',
                    '4-000000-0000000__20170630T012050.1Z_00.00_13',
                    '4-000000-0000000__20170630T012050.1Z_00.00_14',
                    '4-000000-0000000__20170630T012050.1Z_00.00_15',
                    '4-000000-0000000__20170630T012050.1Z_00.00_16',
                    '4-000000-0000000__20170630T012050.1Z_00.00_17',
                    '4-000000-0000000__20170630T012050.1Z_00.00_18',
                    '4-000000-0000000__20170630T012050.1Z_00.00_19',
                    '4-000000-0000000__20170630T012050.1Z_00.00_1',
                    '4-000000-0000000__20170630T012050.1Z_00.00_20',
                    '4-000000-0000000__20170630T012050.1Z_00.00_21',
                    '4-000000-0000000__20170630T012050.1Z_00.00_22',
                    '4-000000-0000000__20170630T012050.1Z_00.00_23',
                    '4-000000-0000000__20170630T012050.1Z_00.00_24',
                    '4-000000-0000000__20170630T012050.1Z_00.00_25',
                    '4-000000-0000000__20170630T012050.1Z_00.00_26',
                    '4-000000-0000000__20170630T012050.1Z_00.00_27',
                    '4-000000-0000000__20170630T012050.1Z_00.00_28',
                    '4-000000-0000000__20170630T012050.1Z_00.00_29',
                    '4-000000-0000000__20170630T012050.1Z_00.00_2',
                    '4-000000-0000000__20170630T012050.1Z_00.00_30',
                    '4-000000-0000000__20170630T012050.1Z_00.00_31',
                    '4-000000-0000000__20170630T012050.1Z_00.00_32',
                    '4-000000-0000000__20170630T012050.1Z_00.00_33',
                    '4-000000-0000000__20170630T012050.1Z_00.00_34',
                    '4-000000-0000000__20170630T012050.1Z_00.00_35',
                    '4-000000-0000000__20170630T012050.1Z_00.00_3',
                    '4-000000-0000000__20170630T012050.1Z_00.00_4',
                    '4-000000-0000000__20170630T012050.1Z_00.00_5',
                    '4-000000-0000000__20170630T012050.1Z_00.00_6',
                    '4-000000-0000000__20170630T012050.1Z_00.00_7',
                    '4-000000-0000000__20170630T012050.1Z_00.00_8',
                    '4-000000-0000000__20170630T012050.1Z_00.00_9']

    for cat_ in cats_partial:
        cats_final.append('{}{}.cat'.format(cat_part_1, cat_))

    cat_file = cats_final[cat_n]

    return cat_file


def get_fits(fits_n):
    """  TODO get scamp organization in order to reduce the lines number

    :param fits_n:
    :return: fits_file
    """
    fits_part_1 = 'EUC_VIS_SWL-DET-00'

    fits_final = []
    fits_partial = ['', '1-000000-0000000__20170630T011437.3Z_00.00_0',
                    '1-000000-0000000__20170630T011437.3Z_00.00_10',
                    '1-000000-0000000__20170630T011437.3Z_00.00_11',
                    '1-000000-0000000__20170630T011437.3Z_00.00_12',
                    '1-000000-0000000__20170630T011437.3Z_00.00_13',
                    '1-000000-0000000__20170630T011437.3Z_00.00_14',
                    '1-000000-0000000__20170630T011437.3Z_00.00_15',
                    '1-000000-0000000__20170630T011437.3Z_00.00_16',
                    '1-000000-0000000__20170630T011437.3Z_00.00_17',
                    '1-000000-0000000__20170630T011437.3Z_00.00_18',
                    '1-000000-0000000__20170630T011437.3Z_00.00_19',
                    '1-000000-0000000__20170630T011437.3Z_00.00_1',
                    '1-000000-0000000__20170630T011437.3Z_00.00_20',
                    '1-000000-0000000__20170630T011437.3Z_00.00_21',
                    '1-000000-0000000__20170630T011437.3Z_00.00_22',
                    '1-000000-0000000__20170630T011437.3Z_00.00_23',
                    '1-000000-0000000__20170630T011437.3Z_00.00_24',
                    '1-000000-0000000__20170630T011437.3Z_00.00_25',
                    '1-000000-0000000__20170630T011437.3Z_00.00_26',
                    '1-000000-0000000__20170630T011437.3Z_00.00_27',
                    '1-000000-0000000__20170630T011437.3Z_00.00_28',
                    '1-000000-0000000__20170630T011437.3Z_00.00_29',
                    '1-000000-0000000__20170630T011437.3Z_00.00_2',
                    '1-000000-0000000__20170630T011437.3Z_00.00_30',
                    '1-000000-0000000__20170630T011437.3Z_00.00_31',
                    '1-000000-0000000__20170630T011437.3Z_00.00_32',
                    '1-000000-0000000__20170630T011437.3Z_00.00_33',
                    '1-000000-0000000__20170630T011437.3Z_00.00_34',
                    '1-000000-0000000__20170630T011437.3Z_00.00_35',
                    '1-000000-0000000__20170630T011437.3Z_00.00_3',
                    '1-000000-0000000__20170630T011437.3Z_00.00_4',
                    '1-000000-0000000__20170630T011437.3Z_00.00_5',
                    '1-000000-0000000__20170630T011437.3Z_00.00_6',
                    '1-000000-0000000__20170630T011437.3Z_00.00_7',
                    '1-000000-0000000__20170630T011437.3Z_00.00_8',
                    '1-000000-0000000__20170630T011437.3Z_00.00_9',
                    '2-000000-0000000__20170630T011642.0Z_00.00_0',
                    '2-000000-0000000__20170630T011642.0Z_00.00_10',
                    '2-000000-0000000__20170630T011642.0Z_00.00_11',
                    '2-000000-0000000__20170630T011642.0Z_00.00_12',
                    '2-000000-0000000__20170630T011642.0Z_00.00_13',
                    '2-000000-0000000__20170630T011642.0Z_00.00_14',
                    '2-000000-0000000__20170630T011642.0Z_00.00_15',
                    '2-000000-0000000__20170630T011642.0Z_00.00_16',
                    '2-000000-0000000__20170630T011642.0Z_00.00_17',
                    '2-000000-0000000__20170630T011642.0Z_00.00_18',
                    '2-000000-0000000__20170630T011642.0Z_00.00_19',
                    '2-000000-0000000__20170630T011642.0Z_00.00_1',
                    '2-000000-0000000__20170630T011642.0Z_00.00_20',
                    '2-000000-0000000__20170630T011642.0Z_00.00_21',
                    '2-000000-0000000__20170630T011642.0Z_00.00_22',
                    '2-000000-0000000__20170630T011642.0Z_00.00_23',
                    '2-000000-0000000__20170630T011642.0Z_00.00_24',
                    '2-000000-0000000__20170630T011642.0Z_00.00_25',
                    '2-000000-0000000__20170630T011642.0Z_00.00_26',
                    '2-000000-0000000__20170630T011642.0Z_00.00_27',
                    '2-000000-0000000__20170630T011642.0Z_00.00_28',
                    '2-000000-0000000__20170630T011642.0Z_00.00_29',
                    '2-000000-0000000__20170630T011642.0Z_00.00_2',
                    '2-000000-0000000__20170630T011642.0Z_00.00_30',
                    '2-000000-0000000__20170630T011642.0Z_00.00_31',
                    '2-000000-0000000__20170630T011642.0Z_00.00_32',
                    '2-000000-0000000__20170630T011642.0Z_00.00_33',
                    '2-000000-0000000__20170630T011642.0Z_00.00_34',
                    '2-000000-0000000__20170630T011642.0Z_00.00_35',
                    '2-000000-0000000__20170630T011642.0Z_00.00_3',
                    '2-000000-0000000__20170630T011642.0Z_00.00_4',
                    '2-000000-0000000__20170630T011642.0Z_00.00_5',
                    '2-000000-0000000__20170630T011642.0Z_00.00_6',
                    '2-000000-0000000__20170630T011642.0Z_00.00_7',
                    '2-000000-0000000__20170630T011642.0Z_00.00_8',
                    '2-000000-0000000__20170630T011642.0Z_00.00_9',
                    '3-000000-0000000__20170630T011848.6Z_00.00_0',
                    '3-000000-0000000__20170630T011848.6Z_00.00_10',
                    '3-000000-0000000__20170630T011848.6Z_00.00_11',
                    '3-000000-0000000__20170630T011848.6Z_00.00_12',
                    '3-000000-0000000__20170630T011848.6Z_00.00_13',
                    '3-000000-0000000__20170630T011848.6Z_00.00_14',
                    '3-000000-0000000__20170630T011848.6Z_00.00_15',
                    '3-000000-0000000__20170630T011848.6Z_00.00_16',
                    '3-000000-0000000__20170630T011848.6Z_00.00_17',
                    '3-000000-0000000__20170630T011848.6Z_00.00_18',
                    '3-000000-0000000__20170630T011848.6Z_00.00_19',
                    '3-000000-0000000__20170630T011848.6Z_00.00_1',
                    '3-000000-0000000__20170630T011848.6Z_00.00_20',
                    '3-000000-0000000__20170630T011848.6Z_00.00_21',
                    '3-000000-0000000__20170630T011848.6Z_00.00_22',
                    '3-000000-0000000__20170630T011848.6Z_00.00_23',
                    '3-000000-0000000__20170630T011848.6Z_00.00_24',
                    '3-000000-0000000__20170630T011848.6Z_00.00_25',
                    '3-000000-0000000__20170630T011848.6Z_00.00_26',
                    '3-000000-0000000__20170630T011848.6Z_00.00_27',
                    '3-000000-0000000__20170630T011848.6Z_00.00_28',
                    '3-000000-0000000__20170630T011848.6Z_00.00_29',
                    '3-000000-0000000__20170630T011848.6Z_00.00_2',
                    '3-000000-0000000__20170630T011848.6Z_00.00_30',
                    '3-000000-0000000__20170630T011848.6Z_00.00_31',
                    '3-000000-0000000__20170630T011848.6Z_00.00_32',
                    '3-000000-0000000__20170630T011848.6Z_00.00_33',
                    '3-000000-0000000__20170630T011848.6Z_00.00_34',
                    '3-000000-0000000__20170630T011848.6Z_00.00_35',
                    '3-000000-0000000__20170630T011848.6Z_00.00_3',
                    '3-000000-0000000__20170630T011848.6Z_00.00_4',
                    '3-000000-0000000__20170630T011848.6Z_00.00_5',
                    '3-000000-0000000__20170630T011848.6Z_00.00_6',
                    '3-000000-0000000__20170630T011848.6Z_00.00_7',
                    '3-000000-0000000__20170630T011848.6Z_00.00_8',
                    '3-000000-0000000__20170630T011848.6Z_00.00_9',
                    '4-000000-0000000__20170630T012050.1Z_00.00_0',
                    '4-000000-0000000__20170630T012050.1Z_00.00_10',
                    '4-000000-0000000__20170630T012050.1Z_00.00_11',
                    '4-000000-0000000__20170630T012050.1Z_00.00_12',
                    '4-000000-0000000__20170630T012050.1Z_00.00_13',
                    '4-000000-0000000__20170630T012050.1Z_00.00_14',
                    '4-000000-0000000__20170630T012050.1Z_00.00_15',
                    '4-000000-0000000__20170630T012050.1Z_00.00_16',
                    '4-000000-0000000__20170630T012050.1Z_00.00_17',
                    '4-000000-0000000__20170630T012050.1Z_00.00_18',
                    '4-000000-0000000__20170630T012050.1Z_00.00_19',
                    '4-000000-0000000__20170630T012050.1Z_00.00_1',
                    '4-000000-0000000__20170630T012050.1Z_00.00_20',
                    '4-000000-0000000__20170630T012050.1Z_00.00_21',
                    '4-000000-0000000__20170630T012050.1Z_00.00_22',
                    '4-000000-0000000__20170630T012050.1Z_00.00_23',
                    '4-000000-0000000__20170630T012050.1Z_00.00_24',
                    '4-000000-0000000__20170630T012050.1Z_00.00_25',
                    '4-000000-0000000__20170630T012050.1Z_00.00_26',
                    '4-000000-0000000__20170630T012050.1Z_00.00_27',
                    '4-000000-0000000__20170630T012050.1Z_00.00_28',
                    '4-000000-0000000__20170630T012050.1Z_00.00_29',
                    '4-000000-0000000__20170630T012050.1Z_00.00_2',
                    '4-000000-0000000__20170630T012050.1Z_00.00_30',
                    '4-000000-0000000__20170630T012050.1Z_00.00_31',
                    '4-000000-0000000__20170630T012050.1Z_00.00_32',
                    '4-000000-0000000__20170630T012050.1Z_00.00_33',
                    '4-000000-0000000__20170630T012050.1Z_00.00_34',
                    '4-000000-0000000__20170630T012050.1Z_00.00_35',
                    '4-000000-0000000__20170630T012050.1Z_00.00_3',
                    '4-000000-0000000__20170630T012050.1Z_00.00_4',
                    '4-000000-0000000__20170630T012050.1Z_00.00_5',
                    '4-000000-0000000__20170630T012050.1Z_00.00_6',
                    '4-000000-0000000__20170630T012050.1Z_00.00_7',
                    '4-000000-0000000__20170630T012050.1Z_00.00_8',
                    '4-000000-0000000__20170630T012050.1Z_00.00_9']

    for fits_ in fits_partial:
        fits_final.append('{}{}.fits'.format(fits_part_1, fits_))

    fits_file = fits_final[fits_n]

    return fits_file


def check_source(i_alpha, i_delta, e_df):
    """

    :param i_alpha:
    :param i_delta:
    :param e_df:
    :return: e_df
    """
    prfs_d = extract_settings_sc3()

    e_df = e_df[e_df['ALPHA_J2000'] + prfs_d['tolerance'] > i_alpha]
    e_df = e_df[i_alpha > e_df['ALPHA_J2000'] - prfs_d['tolerance']]
    e_df = e_df[e_df['DELTA_J2000'] + prfs_d['tolerance'] > i_delta]
    e_df = e_df[i_delta > e_df['DELTA_J2000'] - prfs_d['tolerance']]

    return e_df


def load_sextractor_cats():
    """

    :return: cat_d
    """
    prfs_d = extract_settings_sc3()

    cats_number = 144  # todo hardcoded!
    cat_d = {}
    for cat_n in range(1, cats_number + 1, 1):
        cat_file = get_cat(cat_n)
        cat_data = fits.open('{}/{}'.format(prfs_d['fits_dir'], cat_file))

        ccd_df = Table(cat_data[2].data)
        print('CCD catalog {} to Pandas'.format(cat_n))
        cat_d[cat_n] = ccd_df.to_pandas()

    return cat_d


def get_boundaries():
    """

    :return: borders_d
    """
    prfs_d = extract_settings_sc3()

    fits_number = 144  # todo hardcoded!
    borders_d = {}
    for fits_n in range(1, fits_number + 1, 1):
        fits_file = get_fits(fits_n)
        fits_loc = '{}/{}'.format(prfs_d['fits_dir'], fits_file)

        borders_d[fits_file] = get_fits_limits(fits_loc)

    return borders_d


def main():
    source_list = []

    # input_catalog = read_csv('sc3_mer_10_starflag1.csv')
    # Load all catalogs
    cat_d = load_sextractor_cats()
    # Get boundaries for all catalogs
    borders_d = get_boundaries()

    print(borders_d)
    """
    # Look for sources
    # Create two dataframes (stars and galaxies)
    extracted_catalog = fits.open('test_cat.cat')
    full_db = Table(extracted_catalog[2].data)
    full_db = full_db.to_pandas()

    total = input_catalog['X_WORLD'].size
    for i, row in enumerate(input_catalog.itertuples(), 1):
        print('source number: {} - total number: {}'.format(i, total))
        i_alpha = row.X_WORLD
        i_delta = row.Y_WORLD

        e_df = check_source(i_alpha, i_delta, full_db)
        if e_df.empty is not True:
            if e_df['NUMBER'].size == 1:
                source_list.append(e_df['NUMBER'].iloc[0])

    sliced_df = full_db[full_db['NUMBER'].isin(source_list)]
    sliced_df = sliced_df[['X_WORLD', 'Y_WORLD', 'ERRA_WORLD',
                           'ERRB_WORLD', 'MAG_AUTO', 'MAGERR_AUTO']]

    return sliced_df
    """


if __name__ == "__main__":
    main()
